version: '3'
services:
  db:
    image: postgres:12.2-alpine
    container_name: timehammer-db
    environment:
      POSTGRES_USER: timehammer
      POSTGRES_DB: timehammer
      POSTGRES_PASSWORD: ${TIMEHAMMER_DB_PASSWORD}
      TZ: Etc/UTC
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - timehammer
    restart: unless-stopped
  reverseproxy:
    image: linuxserver/letsencrypt:1.3.0-ls109
    container_name: timehammer-reverseproxy
    environment:
      PUID: 1001 # timehammer
      PGID: 1001 # timehammer
      TZ: Etc/UTC
      URL: kronostools.com
      SUBDOMAINS: timehammer,
      VALIDATION: http
      EMAIL: admin@kronostools.com
      DHLEVEL: 2048
      ONLY_SUBDOMAINS: "true"
      STAGING: "false"
    volumes:
      - ./wksp/reverseproxy/config:/config
    ports:
      - 80:80
      - 443:443
    cap_add:
      - NET_ADMIN
    networks:
      - timehammer
    restart: unless-stopped
  zookeeper:
    image: strimzi/kafka:0.17.0-kafka-2.4.0
    container_name: timehammer-zookeeperkafka
    command: ["sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"]
    environment:
      LOG_DIR: /tmp/logs
    networks:
      - timehammer
    restart: unless-stopped
  kafka:
    image: strimzi/kafka:0.17.0-kafka-2.4.0
    container_name: timehammer-kafka
    command: ["sh", "-c", "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"]
    depends_on:
      - zookeeper
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks:
      - timehammer
    restart: unless-stopped
  common:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-common
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/common
    command: ["mvn", "clean", "install"]
  monolith:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-monolith
    env_file:
      - .env
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/monolith
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    networks:
      - timehammer
    restart: unless-stopped
  scheduler:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-scheduler
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/scheduler
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - kafka
    networks:
      - timehammer
    restart: unless-stopped
  catalog:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-catalog
    environment:
      TIMEHAMMER_DB_PASSWORD: ${TIMEHAMMER_DB_PASSWORD}
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/catalog
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - db
      - kafka
    networks:
      - timehammer
    restart: unless-stopped
  core:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-core
    environment:
      TIMEHAMMER_DB_PASSWORD: ${TIMEHAMMER_DB_PASSWORD}
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/core
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - db
      - kafka
    networks:
      - timehammer
    restart: unless-stopped
  integration:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-integration
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/integration
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - kafka
    networks:
      - timehammer
    restart: unless-stopped
  comunytek:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-comunytek
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
      - comunytekdata:/data
    working_dir: /root/wksp/timehammer/comunytek
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - kafka
    networks:
      - timehammer
    restart: unless-stopped
  commandprocessor:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-commandprocessor
    environment:
      TIMEHAMMER_DB_PASSWORD: ${TIMEHAMMER_DB_PASSWORD}
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/commandprocessor
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - kafka
    networks:
      - timehammer
    restart: unless-stopped
  telegramchatbot:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-telegramchatbot
    environment:
      TIMEHAMMER_CHATBOT_TOKEN: ${TIMEHAMMER_CHATBOT_TOKEN}
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/telegramchatbot
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - kafka
    networks:
      - timehammer
    restart: unless-stopped
  telegramchatbotnotifier:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-telegramchatbotnotifier
    environment:
      TIMEHAMMER_CHATBOT_TOKEN: ${TIMEHAMMER_CHATBOT_TOKEN}
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/telegramchatbotnotifier
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - kafka
    networks:
      - timehammer
    restart: unless-stopped
  web:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-web
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/web
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - kafka
    networks:
      - timehammer
    restart: unless-stopped
  statemachine:
    image: maven:3.6.3-jdk-11-slim
    container_name: timehammer-statemachine
    volumes:
      - ./wksp/timehammer:/root/wksp/timehammer
      - ${HOME}/.m2/repository:/root/.m2/repository
    working_dir: /root/wksp/timehammer/statemachine
    command: ["mvn", "-Dquarkus.profile=remotedemo", "quarkus:dev"]
    depends_on:
      - kafka
    networks:
      - timehammer
    restart: unless-stopped

volumes:
  dbdata:
  comunytekdata:

networks:
  timehammer: