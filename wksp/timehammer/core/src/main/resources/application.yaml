quarkus:
  datasource:
    db-kind: postgresql
    username: timehammer
    password: ${TIMEHAMMER_DB_PASSWORD}
    jdbc:
      url: jdbc:postgresql://db:5432/timehammer
    reactive:
      url: postgresql://db:5432/timehammer

  flyway:
    migrate-at-start: true

mp:
  messaging:
    incoming:
      schedule-update-holidays:
        connector: smallrye-kafka
        topic: schedule-update-holidays
        value:
          deserializer: com.kronostools.timehammer.common.messages.schedules.deserializers.ScheduleTriggerMessageJacksonDeserializer
      schedule-update-status:
        connector: smallrye-kafka
        topic: schedule-update-status
        value:
          deserializer: com.kronostools.timehammer.common.messages.schedules.deserializers.ScheduleTriggerMessageJacksonDeserializer
      schedule-clean-holidays:
        connector: smallrye-kafka
        topic: schedule-clean-holidays
        value:
          deserializer: com.kronostools.timehammer.common.messages.schedules.deserializers.ScheduleTriggerMessageJacksonDeserializer
      holidays-worker-update:
        connector: smallrye-kafka
        topic: holidays-worker-update
        value:
          deserializer: com.kronostools.timehammer.common.messages.schedules.deserializers.UpdateWorkersHolidayWorkerJacksonDeserializer
      command-preprocess:
        connector: smallrye-kafka
        topic: command-preprocess
        value:
          deserializer: com.kronostools.timehammer.common.messages.telegramchatbot.deserializers.TelegramChatbotInputMessageJacksonDeserializer
      command-id-in:
        connector: smallrye-kafka
        topic: command-id
        value:
          deserializer: com.kronostools.timehammer.common.messages.telegramchatbot.deserializers.TelegramChatbotInputMessageJacksonDeserializer
      answer-id:
        connector: smallrye-kafka
        topic: answer-id
        value:
          deserializer: com.kronostools.timehammer.common.messages.telegramchatbot.deserializers.TelegramChatbotAnswerMessageJacksonDeserializer
      worker-register-validate:
        connector: smallrye-kafka
        topic: worker-register-validate
        value:
          deserializer: com.kronostools.timehammer.common.messages.registration.deserializers.WorkerRegistrationRequestJacksonDeserializer
      worker-update-password-validate:
        connector: smallrye-kafka
        topic: worker-update-password-validate
        value:
          deserializer: com.kronostools.timehammer.common.messages.updatePassword.deserializers.WorkerUpdatePasswordRequestJacksonDeserializer
      worker-register-persist:
        connector: smallrye-kafka
        topic: worker-register-persist
        value:
          deserializer: com.kronostools.timehammer.common.messages.registration.deserializers.WorkerRegistrationRequestJacksonDeserializer
      worker-register-notify:
        connector: smallrye-kafka
        topic: worker-register-notify
        value:
          deserializer: com.kronostools.timehammer.common.messages.registration.deserializers.WorkerRegistrationRequestJacksonDeserializer
      worker-update-password-notify:
        connector: smallrye-kafka
        topic: worker-update-password-notify
        value:
          deserializer: com.kronostools.timehammer.common.messages.updatePassword.deserializers.WorkerUpdatePasswordRequestJacksonDeserializer
    outgoing:
      holidays-worker-get:
        connector: smallrye-kafka
        topic: holidays-worker-get
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      status-worker-get:
        connector: smallrye-kafka
        topic: status-worker-get
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      holidays-worker-summary:
        connector: smallrye-kafka
        topic: holidays-worker-summary
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      holidays-clean-summary:
        connector: smallrye-kafka
        topic: holidays-clean-summary
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      command-id-out:
        connector: smallrye-kafka
        topic: command-id
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      command-process:
        connector: smallrye-kafka
        topic: command-process
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      answer-process:
        connector: smallrye-kafka
        topic: answer-process
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      worker-register-route:
        connector: smallrye-kafka
        topic: worker-register-route
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      worker-update-password-route:
        connector: smallrye-kafka
        topic: worker-update-password-route
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      worker-register-save-notify:
        connector: smallrye-kafka
        topic: worker-register-notify
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      worker-register-validate-notify:
        connector: smallrye-kafka
        topic: worker-register-notify
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      worker-update-password-validate-notify:
        connector: smallrye-kafka
        topic: worker-update-password-notify
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer
      notification-telegram:
        connector: smallrye-kafka
        topic: notification-telegram
        value:
          serializer: io.quarkus.kafka.client.serialization.ObjectMapperSerializer